-- Excluding all flights that were cancelled or diverted and calculating average departure and arrival delays for all flights (in minutes)

SELECT
	AVG(DEPDELAY)
    ,AVG(ARRDELAY)
FROM
	ontime
WHERE
	CANCELLED = 0
AND
	DIVERTED = 0
;

SELECT DISTINCT DEPTIME, CRSDEPTIME, DEPDELAY, DepTime - CRSDepTime from ontime ORDER BY DEPTIME DESC, CRSDEPTIME DESC LIMIT 100;

-- Q8
SELECT	AVG(DepTime - CRSDepTime)
FROM		ontime
WHERE	Cancelled = 0 AND 
Diverted = 0;

-- Correcting departure and crs departure times
show columns from ontime  ;
SELECT
	DEPTIME
    ,CRSDEPTIME
    ,TIME(DEPTIME * 100)
    ,TIME(CRSDEPTIME*100)
FROM
	ontime
LIMIT 10;

SELECT DATA_TYPE from INFORMATION_SCHEMA.COLUMNS where
table_schema = 'airline_ontime' and tablename = 'ontime' ;

-- Checking id depdelay is consistent
SELECT

    AVG(DEPDELAY)
    ,AVG(TIME_TO_SEC(TIMEDIFF(TIME(DEPTIME),TIME(CRSDEPTIME))))
    
FROM
	ontime
WHERE
	CANCELLED = 0
AND 
	DIVERTED = 0
AND
	CRSDEPTIME BETWEEN 800 AND 1600 
AND
	ABS(DEPDELAY) <= 240 
;

-- total distance traveled of all non-cancelled, non-diverted flights that departed from RDU on July 20, 2007

SELECT
	SUM(DISTANCE)
FROM
	ontime
WHERE
	CANCELLED = 0
AND
	DIVERTED = 0
AND
	ORIGIN = 'RDU'
AND
	CONCAT(DAYOFMONTH,'+',MONTH,'+',YEAR) = '20+7+2007';
    
-- the total number of direct flights between SFO airport in San Francisco and LAX airport in Los Angeles.  

SELECT 
	COUNT(*)
FROM
	ontime
WHERE
	CANCELLED = 0
AND
	DIVERTED = 0
AND
	((ORIGIN = 'SFO' AND DEST = 'LAX' AND CRSDEPTIME > 1700 AND CRSDEPTIME < 2000 AND DAYOFWEEK = 5)
	OR
	(ORIGIN = 'LAX' AND DEST = 'SFO' AND CRSDEPTIME > 1700 AND CRSDEPTIME < 2000 AND DAYOFWEEK = 7))

;

/* 
“score” for each unique carrier (assuming “unique carrier” is synonymous with “airline”).    
sum of 2 percentages:
First, the unique carrier’s percentage of all direct flights between the two airports (satisfying all of the same conditions as in your first query). 
Second, the unique carrier’s percentage of its own flights that do NOT have an arrival delay of at least 60 minutes.  
*/
SELECT 
	UniqueCarrier
    ,ROUND((UNIQUE_CARRIER_PERC+PERC_OF_OWN_FLIGHTS) * 100,2) AS SCORE
FROM
(
SELECT
	UNIQUECARRIER
	,COUNT(*)/ ( SELECT 
					COUNT(*)
				FROM
					ontime
				WHERE
					CANCELLED = 0
				AND
					DIVERTED = 0
				AND
					((ORIGIN = 'SFO' AND DEST = 'LAX' AND CRSDEPTIME > 1700 AND CRSDEPTIME < 2000 AND DAYOFWEEK = 5)
					OR
					(ORIGIN = 'LAX' AND DEST = 'SFO' AND CRSDEPTIME > 1700 AND CRSDEPTIME < 2000 AND DAYOFWEEK = 7))
				) AS UNIQUE_CARRIER_PERC
			,SUM(
					CASE
						WHEN ARRDELAY < 60
                        THEN 1
					END
				)/COUNT(*) AS PERC_OF_OWN_FLIGHTS
                        
FROM
	ontime
	
WHERE
	CANCELLED = 0
AND
	DIVERTED = 0
AND
	((ORIGIN = 'SFO' AND DEST = 'LAX' AND CRSDEPTIME > 1700 AND CRSDEPTIME < 2000 AND DAYOFWEEK = 5)
	OR
	(ORIGIN = 'LAX' AND DEST = 'SFO' AND CRSDEPTIME > 1700 AND CRSDEPTIME < 2000 AND DAYOFWEEK = 7))

GROUP BY UNIQUECARRIER
) A

ORDER BY SCORE DESC;

--the ten calendar weeks of 2007 with the greatest number of cancelled flight records? 


SELECT
	WEEK(DATE(CONCAT(YEAR,'-',MONTH,'-',DAYOFMONTH)),2) AS WEEK_NUMBER
    ,MIN(DATE(CONCAT(YEAR,'-',MONTH,'-',DAYOFMONTH))) AS START_OF_WEEK
    ,MAX(DATE(CONCAT(YEAR,'-',MONTH,'-',DAYOFMONTH))) AS END_OF_WEEK
    ,COUNT(*) AS CANCELLED_FLIGHT_COUNT
FROM 
	ontime
 WHERE
	CANCELLED = 1
GROUP BY WEEK_NUMBER
ORDER BY COUNT(*) DESC
LIMIT 10;

/* Q4
Next, let’s switch over to the airline_ontime database. 
We want to confirm that every flight record in our “ontime” table has valid information for the origin and destination airports. 
Let’s do this by running three separate queries. 
First, count the total number of records in the airline_ontime.ontime table. 
Next, join the airline_ontime.ontime table with the airline_ontime.airports table on the origin airport 
(using the appropriate column in the “airports” table—documentation for the airports table can be found here:  
https://openflights.org/data.html).
 Finally, join the airline_ontime.ontime table with the airline_ontime.airports table on the destination airport. 
 Compare the three counts—are they equal? If so, we can conclude that all of our flight records have valid origins and destinations! 
 (Be sure to use the correct type of joins. Why would using a LEFT JOIN in this situation not help us answer our question of interest???)
*/
SELECT 
	COUNT(*) 
FROM
	ontime;
SELECT DISTINCT COUNTRY FROM airports;

SELECT COUNT(*)
FROM
	ontime A
INNER JOIN
	airports B
ON A.Dest = B.IATA;

/*Q5
Provide a count (“Total_Rec”) of the number of non-cancelled, non-diverted flights departing from each airport outside of the ‘United States’. 
Include country name and airport name in your output (but you do not need to generate aliases for these two columns). Order your output from highest to lowest “Total_Rec.” 
*/

SELECT
	COUNTRY
    ,CITY
    ,COUNT(*) AS TOTAL_REC
FROM
	ontime A
INNER JOIN
	airports B
ON A.ORIGIN = B.IATA
WHERE
	UPPER(B.COUNTRY) <> 'UNITED STATES' 
AND
	A.CANCELLED = 0
AND
	A.DIVERTED = 0
GROUP BY
	COUNTRY
    ,CITY;
    
    
/*
What are the 10 most common flights that originate inside the ‘United States’? 
Ignore all cancelled and diverted flights. 
Your output should include the name of the airport where the flight departs, 
the name of the airport where the flight lands, 
and the total count of flight records for each departure/arrival pair. 
Drop the string ‘ Airport’ from your departaure and arrival airport names to conserve space in your output. 
(HINT: nothing is preventing you from JOINing with the airports table twice! Whenever you have multiple JOINs they always occur sequentially—the first JOIN you specify happens first. Then, the result of that first JOIN is JOINed again with the next table.)
*/

SELECT 

    REPLACE(ORIG.NAME,'Airport','') as ORIGIN_AIRPORT,
  
	REPLACE(DEST.NAME,'Airport','') as DESTINATION_AIRPORT 

    ,COUNT(*)
FROM
	ontime O
INNER JOIN
	airports ORIG 
ON 
	O.ORIGIN = ORIG.IATA
INNER JOIN
	airports DEST
ON
	O.DEST = DEST.IATA

WHERE
	UPPER(ORIG.COUNTRY) = 'UNITED STATES' 
AND
	O.Cancelled = 0
AND
	O.Diverted = 0
GROUP BY
	ORIGIN_AIRPORT
    ,DESTINATION_AIRPORT
ORDER BY 
	COUNT(*) DESC
LIMIT 10;

SELECT ORIGIN,DEST,COUNT(*),country FROM ontime
INNER JOIN airports on ontime.origin = airports.iata
WHERE
Cancelled = 0
AND
Diverted = 0
GROUP BY 1,2,4
ORDER BY COUNT(*) DESC

;

-- The total number of flight records that both depart and arrive in the ‘UNITED STATES’ where the altitude change between departure and arrival locations is at least 3000 feet. 

SELECT 
	COUNT(*)
FROM
	ontime 
INNER JOIN
	airports ORIG
ON ontime.Origin = ORIG.IATA
AND UPPER(ORIG.COUNTRY) = 'UNITED STATES'

INNER JOIN
	airports DESTI
ON ontime.Dest = DESTI.IATA
AND UPPER(DESTI.COUNTRY) = 'UNITED STATES'

WHERE ABS(ORIG.ALTITUDE-DESTI.ALTITUDE) >= 3000
AND DIVERTED = 0
AND CANCELLED = 0
;

-- the flight records that “both depart and arrive in the ‘United States’ where the altitude change between departure and arrival locations is at least 3000 feet” is what percentage of all flight records that both depart and arrive in the ‘United States’? 

SELECT 
	(SUM(CASE
			WHEN  ABS(ORIG.ALTITUDE-DESTI.ALTITUDE) >= 3000
            THEN 1
		END)/COUNT(*))*100 AS PERCENTAGE
        ,COUNT(*)
FROM
	ontime 
INNER JOIN
	airports ORIG
ON ontime.Origin = ORIG.IATA
AND UPPER(ORIG.COUNTRY) = 'UNITED STATES'

INNER JOIN
	airports DESTI
ON ontime.Dest = DESTI.IATA
AND UPPER(DESTI.COUNTRY) = 'UNITED STATES'

WHERE 
	DIVERTED = 0
AND CANCELLED = 0
;


-- determine the total number of flights that span at least three time zones.  


CASE
	WHEN TIMEZONE = 'America/New_York'
    THEN 1
    WHEN TIMEZONE = 'America/Chicago'
    THEN 2
    WHEN TIMEZONE IN ('America/Denver','America/Phoenix')
    THEN 3
    WHEN TIMEZONE = 'America/Los_Angeles'
    THEN 4
    ELSE NULL
END

;


SELECT
	DEPART.NAME
    ,CASE
		WHEN DEPART.TIMEZONE = 'America/New_York'
		THEN 1
		WHEN DEPART.TIMEZONE = 'America/Chicago'
		THEN 2
		WHEN DEPART.TIMEZONE IN ('America/Denver','America/Phoenix')
		THEN 3
		WHEN DEPART.TIMEZONE = 'America/Los_Angeles'
		THEN 4
		ELSE NULL
	END AS TZ_NUM_DEPART
    ,ARRIVE.NAME
	,CASE
		WHEN ARRIVE.TIMEZONE = 'America/New_York'
		THEN 1
		WHEN ARRIVE.TIMEZONE = 'America/Chicago'
		THEN 2
		WHEN ARRIVE.TIMEZONE IN ('America/Denver','America/Phoenix')
		THEN 3
		WHEN ARRIVE.TIMEZONE = 'America/Los_Angeles'
		THEN 4
		ELSE NULL
	END AS TZ_NUM_DEPART
FROM
	ontime 
INNER JOIN
	airports DEPART
ON ontime.Origin = DEPART.IATA
AND UPPER(DEPART.COUNTRY) = 'UNITED STATES'

INNER JOIN
	airports ARRIVE
ON ontime.Dest = ARRIVE.IATA
AND UPPER(ARRIVE.COUNTRY) = 'UNITED STATES'

WHERE 
	DIVERTED = 0
AND CANCELLED = 0
GROUP BY
	1,2,3,4;
    
-- Final Query
SELECT COUNT(*) 
FROM
(
SELECT
	DEPART.NAME AS DEPARTURE
    ,CASE
		WHEN DEPART.TIMEZONE = 'America/New_York'
		THEN 1
		WHEN DEPART.TIMEZONE = 'America/Chicago'
		THEN 2
		WHEN DEPART.TIMEZONE IN ('America/Denver','America/Phoenix')
		THEN 3
		WHEN DEPART.TIMEZONE = 'America/Los_Angeles'
		THEN 4
		ELSE NULL
	END AS TZ_NUM_DEPART
    ,ARRIVE.NAME AS ARRIVAL
	,CASE
		WHEN ARRIVE.TIMEZONE = 'America/New_York'
		THEN 1
		WHEN ARRIVE.TIMEZONE = 'America/Chicago'
		THEN 2
		WHEN ARRIVE.TIMEZONE IN ('America/Denver','America/Phoenix')
		THEN 3
		WHEN ARRIVE.TIMEZONE = 'America/Los_Angeles'
		THEN 4
		ELSE NULL
	END AS TZ_NUM_ARRIVE
FROM
	ontime 
INNER JOIN
	airports DEPART
ON ontime.Origin = DEPART.IATA
AND UPPER(DEPART.COUNTRY) = 'UNITED STATES'

INNER JOIN
	airports ARRIVE
ON ontime.Dest = ARRIVE.IATA
AND UPPER(ARRIVE.COUNTRY) = 'UNITED STATES'

WHERE 
	DIVERTED = 0
AND CANCELLED = 0
) T
WHERE ABS(TZ_NUM_DEPART - TZ_NUM_ARRIVE) >= 2
;

SELECT * FROM ontime LIMIT 10;

/*
OH NO!  In 2007 there were no direct flights between RDU and SFO.  
What a travesty! (And my how things have changed!)  
In 2007, how many different routes could you take to get from RDU to SFO with EXACTLY ONE STOP IN BETWEEN? 
*/

WITH DEPART AS
(
SELECT
	ORIGIN AS DEPARTURE_AIRPORT
    ,DEST
    ,COUNT(*)
FROM
	ontime
WHERE
	ORIGIN = 'RDU'
GROUP BY 1,2
HAVING COUNT(*) >= 300
)
,ARRIVE AS
(
SELECT 
	ORIGIN
    ,DEST AS ARRIVAL_AIRPORT
    ,COUNT(*)
FROM
	ontime
WHERE
	DEST = 'SFO'
GROUP BY 1,2
HAVING COUNT(*) >= 300
)
SELECT
COUNT(*)
FROM
DEPART
INNER JOIN
ARRIVE
ON DEPART.DEST = ARRIVE.ORIGIN
;


--For each carrier, determine the average distance that each of its planes flies each day. 

SELECT
	UNIQUECARRIER
    ,AVG(TOTAL_DIST)
FROM
(
SELECT
    TAILNUM
    ,UNIQUECARRIER
    ,DATE(CONCAT(YEAR,'-',MONTH,'-',DAYOFMONTH)) AS FLIGHT_DATE
    ,SUM(DISTANCE) AS TOTAL_DIST
    
FROM
    ontime
WHERE 
    CANCELLED = 0
AND
    DIVERTED = 0
    
AND UPPER(TAILNUM) LIKE 'N%'
GROUP BY 1,2,3
) A
INNER JOIN
(SELECT
    TAILNUM
    ,DATE(CONCAT(YEAR,'-',MONTH,'-',DAYOFMONTH)) AS FLIGHT_DATE
    
FROM
    ontime
WHERE 
    CANCELLED = 0
AND
    DIVERTED = 0
    
AND UPPER(TAILNUM) LIKE 'N%'
GROUP BY 1,2
HAVING COUNT(DISTINCT UNIQUECARRIER) = 1  
) B

ON A.TAILNUM = B.TAILNUM
AND A.FLIGHT_DATE = B.FLIGHT_DATE
GROUP BY UNIQUECARRIER;

--
WITH FLIGHTS AS
(
SELECT
    TAILNUM
    ,UNIQUECARRIER
    ,DATE(CONCAT(YEAR,'-',MONTH,'-',DAYOFMONTH)) AS FLIGHT_DATE
    ,SUM(DISTANCE) AS TOTAL_DIST
    ,RANK() OVER (PARTITION BY TAILNUM,DATE(CONCAT(YEAR,'-',MONTH,'-',DAYOFMONTH)) ORDER BY UNIQUECARRIER) AS NO_CARRIERS
    
FROM
    ontime
    
WHERE 
    CANCELLED = 0
AND
    DIVERTED = 0
    
AND UPPER(TAILNUM) LIKE 'N%'
GROUP BY 1,2,3
)
SELECT
	UNIQUECARRIER
    ,AVG(TOTAL_DIST) AS AVG_DIST
    ,COUNT(*) AS TOTAL_FLIGHTS
FROM
	FLIGHTS
WHERE
	NO_CARRIERS = 1
GROUP BY 1;

--Provide a “Top-2” ranking for each month in terms of greatest average departure delay by airport.  

WITH AIRPORTS_1 AS
(
SELECT

	ORIGIN
    ,MONTH
    ,CASE
		WHEN COUNT(*)  >= 1000
        THEN 1
        END AS DEST_FLIGHT
	,COUNT(*)
    ,COUNT(*) OVER (PARTITION BY ORIGIN) AS AIRPORT_MONTH_TOT
    ,COUNT(DISTINCT MONTH,ORIGIN) 
    ,AVG(DEPDELAY) AS AVG_DELAY
FROM
	ontime A
WHERE
	CANCELLED = 0
AND
	DIVERTED = 0
GROUP BY 1,2
)
,AIRPORTS_FILTERED AS
(
SELECT 
	ORIGIN
FROM 
	AIRPORTS_1
GROUP BY 1
HAVING AVG(AIRPORT_MONTH_TOT) = SUM(DEST_FLIGHT)
 )
 ,RANKING AS
 (
 SELECT 
 A.*
 ,RANK() OVER (PARTITION BY MONTH ORDER BY AVG_DELAY DESC) AS RANKING
 FROM 
	AIRPORTS_1 A
 INNER JOIN
	AIRPORTS_FILTERED B
ON 
	A.ORIGIN = B.ORIGIN
)

SELECT
	airports.Name AS AIRPORT
    ,MONTHNAME(DATE(CONCAT(2022,'-',R.Month,'-',01))) AS DEPARTURE_MONTH
    ,R.RANKING
FROM
	RANKING R
INNER JOIN
	airports 
ON
	R.ORIGIN = airports.IATA
WHERE 
	RANKING <= 2
ORDER BY 
	MONTH
    ,RANKING;

SELECT * FROM airports limit 10;


WITH t1 AS
(
SELECT *, COUNT(*) AS num, AVG(DepDelay) as AVG
FROM ontime
WHERE Cancelled = 0 AND DIVERTED = 0 
GROUP BY Month, Origin
), t2 AS
(
SELECT *, MIN(num) OVER(PARTITION BY Origin) as Min_Count
FROM t1
), t3 AS
(
SELECT *, RANK() OVER (PARTITION BY Year, Month ORDER BY AVG DESC) AS RNK
FROM t2
WHERE Min_Count >= 1000
), t4 AS(
SELECT t3.Month, airports.Name, t3.RNK
FROM t3 AS t3
INNER JOIN airports 
ON    t3.Origin = airports.IATA
WHERE RNK <= 2
ORDER BY Month, RNK
), t5 AS
(
SELECT *, ROW_NUMBER() OVER() AS new_RNK
FROM t4
)
SELECT *
FROM t5;
